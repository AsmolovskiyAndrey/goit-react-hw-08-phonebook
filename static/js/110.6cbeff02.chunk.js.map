{"version":3,"file":"static/js/110.6cbeff02.chunk.js","mappings":"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","sources":["components/Contact/Contact.js","redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactEditor/ContactEditor.module.css?ead8","components/Filter/Filter.js","components/ContactEditor/ContactEditor.js","pages/Phonebook.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Box, Button } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport toast from 'react-hot-toast';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    toast.error(`${name} deleted fron Phonebook`);\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'primary.dark',\n        display: 'flex',\n        justifyContent: 'space-between',\n        p: '10px',\n      }}\n    >\n      <p>\n        {name}: {number}\n      </p>\n      <Button\n        type=\"button\"\n        onClick={handleDelete}\n        color=\"error\"\n        variant=\"contained\"\n        size=\"small\"\n        endIcon={<DeleteIcon />}\n      >\n        Delete Contact\n      </Button>\n    </Box>\n  );\n};\n","export const selectLoading = state => state.tasks.loading;\n\nexport const selectFilter = state => state.tasks.filter;\n\nexport const selectAllContacts = state => state.tasks.items;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import { useSelector } from 'react-redux';\nimport { Contact } from '../Contact/Contact';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport css from './ContactList.module.css';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const myContacts = useSelector(selectAllContacts);\n  const myFilter = useSelector(selectFilter);\n\n  const getVisibleContacts = () => {\n    const normalized = myFilter.toLowerCase();\n    return myContacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalized)\n    );\n  };\n\n  return (\n    <ul className={css.list}>\n      {getVisibleContacts().length === 0 && myContacts.length > 0 && (\n        <strong>Sorry, your search did not find any contacts.</strong>\n      )}\n\n      {myContacts.length > 0 &&\n        getVisibleContacts().map(({ id, name, number }) => (\n          <li key={id}>\n            <Contact id={id} name={name} number={number} />\n          </li>\n        ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactEditor_form__U4ufl\",\"input\":\"ContactEditor_input__Nbns0\"};","// import { Title } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addFilter } from 'redux/contacts/slice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleInputChanged = evt => {\n    dispatch(addFilter(evt.target.value));\n  };\n\n  return (\n    <>\n      {/* <Title>Find contacts by name</Title> */}\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Find contacts by name\"\n        defaultValue=\"Small\"\n        variant=\"outlined\"\n        fullWidth\n        sx={{\n          mb: 2,\n          bgcolor: 'background.paper',\n          boxShadow: 1,\n          borderRadius: 2,\n        }}\n        type=\"search\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleInputChanged}\n      />\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport css from './ContactEditor.module.css';\nimport { useState } from 'react';\nimport { Filter } from 'components/Filter/Filter';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport toast from 'react-hot-toast';\nimport { Button, TextField } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\n\nexport const ContactEditor = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const myContacts = useSelector(selectAllContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addContactLocal({ name, number });\n    toast.success(`${name} added in Phonebook`);\n    setName('');\n    setNumber('');\n  };\n\n  const addContactLocal = data => {\n    const { name, number } = data;\n    if (checkDoubleContact(data)) {\n      // alert(`${name} is already in contacts.`);\n      toast.error(`${name} is already in contacts.`);\n      return;\n    }\n    const newContact = {\n      // id: nanoid(), //! Добавляется на сервере\n      name,\n      number,\n    };\n\n    dispatch(addContact(newContact));\n  };\n\n  const handleInputChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        console.warn(`Error types in ${e}`);\n    }\n  };\n\n  const checkDoubleContact = inputData => {\n    return myContacts.find(contact => contact.name === inputData.name);\n  };\n\n  return (\n    <div>\n      <Filter />\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label>\n          {/* <div>Name</div> */}\n          <TextField\n            id=\"standard-basic\"\n            label=\"Name\"\n            variant=\"standard\"\n            // fullWidth\n            sx={{\n              mb: 2,\n              bgcolor: 'background.paper',\n              boxShadow: 1,\n              borderRadius: 2,\n            }}\n            className={css.input}\n            value={name}\n            onChange={handleInputChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label>\n          {/* <div>Number</div> */}\n          <TextField\n            id=\"standard-basic\"\n            label=\"Number\"\n            variant=\"standard\"\n            // fullWidth\n            sx={{\n              mb: 2,\n              bgcolor: 'background.paper',\n              boxShadow: 1,\n              borderRadius: 2,\n            }}\n            className={css.input}\n            value={number}\n            onChange={handleInputChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <Button\n          type=\"submit\"\n          className={css.button}\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"small\"\n          endIcon={<SendIcon />}\n        >\n          Add contact\n        </Button>\n      </form>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactEditor } from 'components/ContactEditor/ContactEditor';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["Contact","id","name","number","dispatch","useDispatch","Box","sx","backgroundColor","display","justifyContent","p","Button","type","onClick","deleteContact","toast","color","variant","size","endIcon","Delete","selectLoading","state","tasks","loading","selectFilter","filter","selectAllContacts","items","ContactList","myContacts","useSelector","myFilter","getVisibleContacts","normalized","toLowerCase","contact","includes","className","css","length","map","Filter","TextField","label","defaultValue","fullWidth","mb","bgcolor","boxShadow","borderRadius","value","onChange","evt","addFilter","target","ContactEditor","useState","setName","setNumber","addContactLocal","data","checkDoubleContact","newContact","addContact","handleInputChange","e","console","warn","inputData","find","onSubmit","preventDefault","pattern","title","required","Send","Phonebook","isLoading","useEffect","fetchContacts"],"sourceRoot":""}